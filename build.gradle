plugins {
    id 'java-library'
    id("io.qameta.allure") version "2.12.0"
    id("io.freefair.lombok") version "8.11"
}
group = 'org.name'
version = '1.0-SNAPSHOT'

allure {
    report {
        version.set("2.19.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.19.0")
            }
        }
    }
}

repositories {
    mavenCentral()
}
dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testImplementation(
            "org.junit.jupiter:junit-jupiter:5.11.3",
            //"com.codeborne:selenide:6.13.0",
            "com.codeborne:selenide:7.5.1",
            "io.appium:java-client:8.3.0",
            "org.slf4j:slf4j-simple:2.0.7",
            "io.qameta.allure:allure-selenide:2.29.0",
            "io.rest-assured:rest-assured:5.5.0",
            "io.qameta.allure:allure-rest-assured:2.29.0",
            "io.rest-assured:json-schema-validator:5.5.0",
            "org.aeonbits.owner:owner:1.0.12",
           // 'org.assertj:assertj-core:3.6.1',
            'org.assertj:assertj-core:3.27.2',
            'com.github.javafaker:javafaker:1.0.2',
            "com.fasterxml.jackson.core:jackson-databind:2.18.2"

    )
}
compileTestJava{
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
        systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
task fulltest(type: Test) {
    useJUnitPlatform {
        includeTags("smoke","api")
    }
}
task smoketest(type: Test) {
    useJUnitPlatform {
        includeTags("smoke")
    }
}
task apitest(type: Test) {
    useJUnitPlatform {
        includeTags("api")
    }
}
task browserstack(type: Test) {
    useJUnitPlatform {
        includeTags("browserstack")
    }
}
task emulation(type: Test) {
    useJUnitPlatform {
        includeTags("emulation")
    }
}
